//rule "samsungtv_on_rule"
//when
//        Item samsungtv_on received command
//	//Item samsungtv_power changed to ON
//then
//	val results = executeCommandLine("ssh Aaron@mediahal2015 \"C:\\Program Files (x86)\\IR Server Suite\\IRBlast-NoWindow.exe\" \"SamsungTV_Power.IR\"", 5000)
//        logInfo("samsungtv_on_rule", results)
//end

rule "emiremote_ponyo_rule"
when
	Item emiremote_ponyo received command
then
	val results = executeCommandLine("ssh Aaron@mediahal2015 \"C:\\Program Files (x86)\\AutoIt3\\AutoIt3.exe\" \"C:\\Program Files (x86)\\AutoIt3\\myscripts\\emimoteB.au3\" 3", 5000)
	logInfo("emiremote_ponyo_rule", results)
end

rule "mediacenter_sleep_rule"
when
	Item mediacenter_sleep received command
then
	val results = executeCommandLine("ssh Aaron@mediahal2015 \"C:\\Program Files (x86)\\AutoIt3\\AutoIt3.exe\" \"C:\\Program Files (x86)\\AutoIt3\\myscripts\\sleep.au3\" 3", 5000)	logInfo("mediacenter_sleep_rule", results)
end

rule "alexa_playsearchkodi_test_rule"
when
	Item alexa_playsearchkodi_test received command
then
	logInfo("rule", "forward to alexa_playsearchkodi")
	alexa_playsearchkodi.sendCommand("Baby Driver")
end

rule "alexa_playsearchnetflix_test_rule"
when
	Item alexa_playsearchnetflix_test received command
then
	logInfo("rule", "forward to alexa_playsearchkodi")
	alexa_playsearchnetflix.sendCommand("Stranger Things")
end
