//rename this to alarm rules

rule "motiongarage_alarm_rule"
when
	Item zwave_node4_MotionSensor_BinarySensor changed to OPEN
then
	var String timestr = CurrentTime.state.format("%1$tR")
	
	nodelcdtop.sendCommand(timestr)
	nodelcdbottom.sendCommand("Garage Motion")
	if(global_alarm.state == ON) {
		global_alarm_triggered.sendCommand(ON)
		nodelcdbright.sendCommand(100)
		sendPushoverMessage(pushoverBuilder("Garage Motion").withPriority(0))
	}
	else if(global_night_alarm.state == ON) {
		nodelcdbright.sendCommand(100)
	}
end

rule "livingroommotion_alarm_rule"
when
	Item zwave_node13_MotionSensor_BinarySensor changed to ON
then
	var String timestr = CurrentTime.state.format("%1$tR")
	
	nodelcdtop.sendCommand(timestr)
	nodelcdbottom.sendCommand("Livingroom Motion")
	if(global_alarm.state == ON) {
		global_alarm_triggered.sendCommand(ON)
		nodelcdbright.sendCommand(100)
		sendPushoverMessage(pushoverBuilder("Livingroom Motion").withPriority(0))
	}
	else if(global_night_alarm.state == ON) {
		nodelcdbright.sendCommand(100)
	}
end

rule "nest_home_away_alarm_rule"
when
	Item home_away changed from AWAY to HOME
then
	var String timestr = CurrentTime.state.format("%1$tR")
	
	nodelcdtop.sendCommand(timestr)
	nodelcdbottom.sendCommand("Nest Set Home")
	if(global_alarm.state == ON) {
		global_alarm_triggered.sendCommand(ON)
		nodelcdbright.sendCommand(100)
		sendPushoverMessage(pushoverBuilder("Nest changed to Home").withPriority(0))
	}
end

rule "global_alarm_rule"
when
	Item global_alarm received command
then
	var String timestr = CurrentTime.state.format("%1$tR")
	
	global_camera_pushover_alert.sendCommand(receivedCommand)
	nodelcdtop.sendCommand(timestr)
	if(receivedCommand == ON) {
		nodelcdbottom.sendCommand("Alarm Set")
		nodelcdbright.sendCommand(0);
	}
	else {
		nodelcdbottom.sendCommand("Alarm Off")
		global_alarm_triggered.sendCommand(OFF)
	}
end

rule "global_alarm_triggered_rule"
when
	Item global_alarm_triggered changed from OFF to ON
then
	sendPushoverMessage(pushoverBuilder("Alarm Triggered").withPriority(2))
end

rule "driveway_camera_alert_rule"
when
	Item driveway_camera_alert received command ON
then
	if(global_lovedoorbell_switch.state == ON) {
		global_lovedoorbell_drivewayactivate_switch.sendCommand(ON)
	}
	if(global_camera_pushover_alert.state == ON) {
		val results = executeCommandLine("wget http://mediahal2015:8081/image/DW?q=50&s=80&user=hab&pw=HabPass12 -O /home/openhab/ImageDrop/" + "dw_doorbell.jpeg",5000)
		logInfo("execResults", results)
		sendPushoverMessage(pushoverBuilder("Garage Motion Doorbell").withPriority(0).withAttachment("/home/openhab/ImageDrop/dw_doorbell.jpeg"))
	}
end

rule "door_camera_alert_rule"
when
	Item door_camera_alert received command ON
then
	if(global_lovedoorbell_switch.state == ON) {
		global_lovedoorbell_dooractivate_switch.sendCommand(ON)
	}
	if(global_camera_pushover_alert.state == ON) {
		val results = executeCommandLine("wget http://mediahal2015:8081/image/Door?q=50&s=80&user=hab&pw=HabPass12 -O /home/openhab/ImageDrop/" + "dw_doorbell.jpeg",5000)
		logInfo("execResults", results)
		sendPushoverMessage(pushoverBuilder("Door Motion Doorbell").withPriority(0).withAttachment("/home/openhab/ImageDrop/dw_doorbell.jpeg"))
	}
end